/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:41:27 GMT 2022
 */

package org.springframework.samples.petclinic.evosuite.owner;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;
import org.springframework.samples.petclinic.owner.Pet;
import org.springframework.samples.petclinic.owner.PetType;
import org.springframework.samples.petclinic.evosuite.owner.Pet_ESTest_scaffolding;
import org.springframework.samples.petclinic.owner.Visit;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class Pet_ESTest extends Pet_ESTest_scaffolding {

  @Test
  public void testGetTypeReturningPetTypeWhereIsNewIsFalse()  throws Throwable  {
      Pet pet0 = new Pet();
      PetType petType0 = new PetType();
      Integer integer0 = new Integer(1);
      petType0.setId(integer0);
      pet0.setType(petType0);
      PetType petType1 = pet0.getType();
      assertEquals(1, (int)petType1.getId());
  }

  @Test
  public void testSetBirthDate()  throws Throwable  {
      Pet pet0 = new Pet();
      LocalDate localDate0 = MockLocalDate.now();
      pet0.setBirthDate(localDate0);
      LocalDate localDate1 = pet0.getBirthDate();
      assertSame(localDate1, localDate0);
  }

  @Test
  public void testGetVisits()  throws Throwable  {
      Pet pet0 = new Pet();
      Collection<Visit> collection0 = pet0.getVisits();
      assertNotNull(collection0);
  }

  @Test
  public void testGetTypeReturningPetTypeWhereIsNewIsTrue()  throws Throwable  {
      Pet pet0 = new Pet();
      PetType petType0 = new PetType();
      pet0.setType(petType0);
      PetType petType1 = pet0.getType();
      assertTrue(petType1.isNew());
  }

  @Test
  public void testGetBirthDateReturningNull()  throws Throwable  {
      Pet pet0 = new Pet();
      LocalDate localDate0 = pet0.getBirthDate();
      assertNull(localDate0);
  }

  @Test
  public void testAddVisit()  throws Throwable  {
      Pet pet0 = new Pet();
      Visit visit0 = new Visit();
      pet0.addVisit(visit0);
      assertTrue(pet0.isNew());
  }

  @Test
  public void testGetTypeReturningNull()  throws Throwable  {
      Pet pet0 = new Pet();
      PetType petType0 = pet0.getType();
      assertNull(petType0);
  }
}
