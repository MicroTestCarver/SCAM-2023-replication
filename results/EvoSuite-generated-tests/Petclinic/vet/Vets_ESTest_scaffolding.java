/**
 * Scaffolding file used to store all the setups needed to run
 * tests automatically generated by EvoSuite
 * Wed Nov 02 12:34:59 GMT 2022
 */

package org.springframework.samples.petclinic.evosuite.vet;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Vets_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() {
    org.evosuite.runtime.RuntimeSettings.className = "org.springframework.samples.petclinic.vet.Vets";
    org.evosuite.runtime.GuiSupport.initialize();
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100;
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000;
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true;
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED;
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT();
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime();
  }

  @Before
  public void initTestCase(){
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler();
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode();
    org.evosuite.runtime.GuiSupport.setHeadless();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime();
    org.evosuite.runtime.agent.InstrumentingAgent.activate();
  }

  @After
  public void doneWithTestCase(){
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks();
    org.evosuite.runtime.classhandling.JDKClassResetter.reset();
    resetClasses();
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode();
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate();
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode();
  }

  public static void setSystemProperties() {

    /*No java.lang.System property to set*/
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Vets_ESTest_scaffolding.class.getClassLoader() ,
      "org.springframework.core.io.buffer.DataBufferUtils$ReadableByteChannelGenerator",
      "org.springframework.http.server.reactive.ContextPathCompositeHandler",
      "org.ehcache.core.Ehcache",
      "org.ehcache.core.Ehcache$RemoveAllFunction",
      "org.springframework.http.server.reactive.ServerHttpResponse",
      "org.ehcache.core.Ehcache$PutAllFunction",
      "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter",
      "org.springframework.http.HttpRequest",
      "org.springframework.core.annotation.MergedAnnotationPredicates$UniquePredicate",
      "org.springframework.samples.petclinic.vet.Specialty",
      "org.springframework.http.ReactiveHttpOutputMessage",
      "org.ehcache.UserManagedCache",
      "org.ehcache.expiry.ExpiryPolicy",
      "org.springframework.data.util.Sink",
      "org.ehcache.core.EhcacheBase",
      "org.springframework.core.annotation.MergedAnnotationPredicates$FirstRunOfPredicate",
      "org.springframework.web.util.HierarchicalUriComponents$UriTemplateEncoder",
      "org.ehcache.core.Ehcache$GetAllFunction",
      "org.springframework.http.codec.xml.Jaxb2XmlDecoder$SplitHandler",
      "org.springframework.http.HttpMessage",
      "org.ehcache.config.builders.ExpiryPolicyBuilder$BaseExpiryPolicy",
      "org.springframework.http.server.reactive.ServerHttpRequest",
      "org.springframework.web.method.HandlerTypePredicate$1",
      "org.ehcache.config.builders.ExpiryPolicyBuilder$TimeToIdleExpiryPolicy",
      "org.springframework.samples.petclinic.model.BaseEntity",
      "org.ehcache.jsr107.EhcacheExpiryWrapper",
      "org.springframework.samples.petclinic.vet.Vets",
      "org.springframework.samples.petclinic.model.NamedEntity",
      "org.ehcache.Cache",
      "org.springframework.beans.support.SortDefinition",
      "org.springframework.boot.devtools.autoconfigure.TriggerFileFilter",
      "org.ehcache.config.builders.ExpiryPolicyBuilder$TimeToLiveExpiryPolicy",
      "org.springframework.samples.petclinic.model.Person",
      "org.springframework.http.ReactiveHttpInputMessage",
      "org.springframework.http.server.reactive.HttpHandler",
      "org.springframework.core.io.buffer.DataBufferFactory",
      "org.springframework.web.method.HandlerTypePredicate$Builder",
      "org.ehcache.jsr107.Eh107Expiry",
      "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$ErrorPredicates",
      "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter$ErrorCallback",
      "org.springframework.web.method.HandlerTypePredicate",
      "org.ehcache.jsr107.ExpiryPolicyToEhcacheExpiry",
      "org.springframework.samples.petclinic.vet.Vet",
      "org.springframework.boot.web.client.RestTemplateBuilder$RequestFactoryCustomizer",
      "org.ehcache.core.InternalCache"
    );
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Vets_ESTest_scaffolding.class.getClassLoader());

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.springframework.samples.petclinic.vet.Vets"
    );
  }
}
