/*
 * This file was automatically generated by EvoSuite
 * Wed Nov 02 11:50:32 GMT 2022
 */

package org.springframework.samples.petclinic.evosuite.model;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.springframework.samples.petclinic.model.BaseEntity;
import org.springframework.samples.petclinic.evosuite.model.BaseEntity_ESTest_scaffolding;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BaseEntity_ESTest extends BaseEntity_ESTest_scaffolding {

  @Test
  public void testGetIdReturningZero()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setId(integer0);
      Integer integer1 = baseEntity0.getId();
      assertEquals(0, (int)integer1);
  }

  @Test
  public void testGetIdReturningPositive()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(2204);
      baseEntity0.setId(integer0);
      Integer integer1 = baseEntity0.getId();
      assertEquals(2204, (int)integer1);
  }

  @Test
  public void testGetIdReturningNegative()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer((-884));
      baseEntity0.setId(integer0);
      Integer integer1 = baseEntity0.getId();
      assertEquals((-884), (int)integer1);
  }

  @Test
  public void testIsNewReturningTrue()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      boolean boolean0 = baseEntity0.isNew();
      assertTrue(boolean0);
  }

  @Test
  public void testIsNewReturningFalse()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = new Integer(0);
      baseEntity0.setId(integer0);
      boolean boolean0 = baseEntity0.isNew();
      assertFalse(boolean0);
  }

  @Test
  public void testGetIdReturningNull()  throws Throwable  {
      BaseEntity baseEntity0 = new BaseEntity();
      Integer integer0 = baseEntity0.getId();
      assertNull(integer0);
  }
}
