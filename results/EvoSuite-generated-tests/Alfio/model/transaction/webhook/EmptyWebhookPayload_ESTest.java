/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 00:26:40 GMT 2023
 */

package alfio.model.transaction.webhook;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import alfio.model.transaction.TransactionWebhookPayload;
import alfio.model.transaction.webhook.EmptyWebhookPayload;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class EmptyWebhookPayload_ESTest extends EmptyWebhookPayload_ESTest_scaffolding {

  @Test
  public void testGetStatusReturningNonNull()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.FAILURE;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload((String) null, transactionWebhookPayload_Status0);
      TransactionWebhookPayload.Status transactionWebhookPayload_Status1 = emptyWebhookPayload0.getStatus();
      assertSame(transactionWebhookPayload_Status0, transactionWebhookPayload_Status1);
  }

  @Test
  public void testGetReservationIdReturningNonEmptyString()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.SUCCESS;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload("&jx58(l?M;\u0003kai", transactionWebhookPayload_Status0);
      String string0 = emptyWebhookPayload0.getReservationId();
      assertEquals("&jx58(l?M;\u0003kai", string0);
  }

  @Test
  public void testGetReservationIdReturningEmptyString()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.SUCCESS;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload("", transactionWebhookPayload_Status0);
      String string0 = emptyWebhookPayload0.getReservationId();
      assertEquals("", string0);
  }

  @Test
  public void testGetType()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.FAILURE;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload((String) null, transactionWebhookPayload_Status0);
      String string0 = emptyWebhookPayload0.getType();
      assertEquals("empty", string0);
  }

  @Test
  public void testGetReservationIdReturningNull()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.FAILURE;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload((String) null, transactionWebhookPayload_Status0);
      String string0 = emptyWebhookPayload0.getReservationId();
      assertNull(string0);
  }

  @Test
  public void testGetStatusReturningNull()  throws Throwable  {
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload((String) null, (TransactionWebhookPayload.Status) null);
      emptyWebhookPayload0.getStatus();
  }

  @Test
  public void testGetPayload()  throws Throwable  {
      TransactionWebhookPayload.Status transactionWebhookPayload_Status0 = TransactionWebhookPayload.Status.SUCCESS;
      EmptyWebhookPayload emptyWebhookPayload0 = new EmptyWebhookPayload("", transactionWebhookPayload_Status0);
      String string0 = emptyWebhookPayload0.getPayload();
      assertEquals("empty", string0);
  }
}
