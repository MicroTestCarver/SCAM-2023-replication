/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 03:36:39 GMT 2023
 */

package alfio.model.transaction.token;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import alfio.model.transaction.PaymentMethod;
import alfio.model.transaction.token.MollieToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class MollieToken_ESTest extends MollieToken_ESTest_scaffolding {

  @Test
  public void test0()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.NONE;
      MollieToken mollieToken0 = new MollieToken("", paymentMethod0);
      mollieToken0.getToken();
  }

  @Test
  public void testGetToken()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.IDEAL;
      MollieToken mollieToken0 = new MollieToken("", paymentMethod0);
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getToken();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getToken();
      mollieToken0.getToken();
  }

  @Test
  public void test1()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.BELFIUS;
      MollieToken mollieToken0 = new MollieToken("USE_PARTNER_CODE_INSTEAD_OF_PROMOTIONAL", paymentMethod0);
      mollieToken0.getPaymentProvider();
  }

  @Test
  public void test2()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.BELFIUS;
      MollieToken mollieToken0 = new MollieToken("USE_PARTNER_CODE_INSTEAD_OF_PROMOTIONAL", paymentMethod0);
      mollieToken0.getPaymentMethod();
  }

  @Test
  public void testGetTokenReturningNonEmptyString()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.ON_SITE;
      MollieToken mollieToken0 = new MollieToken("]ix6vgRzK3$2ay", paymentMethod0);
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getToken();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentMethod();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getToken();
  }

  @Test
  public void testGetTokenReturningNull()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.BELFIUS;
      MollieToken mollieToken0 = new MollieToken((String) null, paymentMethod0);
      mollieToken0.getToken();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentMethod();
  }

  @Test
  public void testGetPaymentMethodReturningNull()  throws Throwable  {
      PaymentMethod paymentMethod0 = PaymentMethod.POSTFINANCE;
      MollieToken mollieToken0 = new MollieToken(":KAA~&jtTPl18", paymentMethod0);
      mollieToken0.getPaymentProvider();
      mollieToken0.getPaymentMethod();
      mollieToken0.getPaymentProvider();
      mollieToken0.getToken();
      mollieToken0.getToken();
      mollieToken0.getPaymentMethod();
      MollieToken mollieToken1 = new MollieToken(":KAA~&jtTPl18", (PaymentMethod) null);
      mollieToken1.getPaymentProvider();
      mollieToken1.getPaymentMethod();
      mollieToken1.getPaymentProvider();
  }
}
