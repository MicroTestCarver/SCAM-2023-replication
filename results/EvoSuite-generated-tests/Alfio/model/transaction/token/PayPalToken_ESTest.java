/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 04:20:39 GMT 2023
 */

package alfio.model.transaction.token;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import alfio.model.transaction.token.PayPalToken;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class PayPalToken_ESTest extends PayPalToken_ESTest_scaffolding {

  @Test
  public void testGetTokenReturningNull()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("", (String) null, "");
      String string0 = payPalToken0.getToken();
      assertNull(string0);
  }

  @Test
  public void testGetTokenReturningNonEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken((String) null, "(yU`07wwi916[3,T,[", "(yU`07wwi916[3,T,[");
      String string0 = payPalToken0.getToken();
      assertEquals("(yU`07wwi916[3,T,[", string0);
  }

  @Test
  public void testGetPaymentIdReturningNull()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("", (String) null, "");
      String string0 = payPalToken0.getPaymentId();
      assertNull(string0);
  }

  @Test
  public void testGetPaymentIdReturningEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("+x[SSK_%oA", "", "");
      String string0 = payPalToken0.getPaymentId();
      assertEquals("+x[SSK_%oA", payPalToken0.getPayerId());
      assertEquals("", string0);
      assertEquals("", payPalToken0.getHmac());
  }

  @Test
  public void testGetPayerIdReturningNull()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken((String) null, "(yU`07wwi916[3,T,[", "(yU`07wwi916[3,T,[");
      String string0 = payPalToken0.getPayerId();
      assertNull(string0);
  }

  @Test
  public void testGetPayerIdReturningEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("", (String) null, "");
      String string0 = payPalToken0.getPayerId();
      assertEquals("", string0);
  }

  @Test
  public void testGetHmacReturningNull()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("U!D:)7;", "alfio.model.transaction.token.PayPalToken", (String) null);
      String string0 = payPalToken0.getHmac();
      assertEquals("U!D:)7;", payPalToken0.getPayerId());
      assertNull(string0);
      assertEquals("alfio.model.transaction.token.PayPalToken", payPalToken0.getToken());
  }

  @Test
  public void testGetHmacReturningNonEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken((String) null, "(yU`07wwi916[3,T,[", "(yU`07wwi916[3,T,[");
      String string0 = payPalToken0.getHmac();
      assertEquals("(yU`07wwi916[3,T,[", string0);
  }

  @Test
  public void testGetPaymentMethod()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("U!D:)7;", "alfio.model.transaction.token.PayPalToken", (String) null);
      payPalToken0.getPaymentMethod();
      assertEquals("U!D:)7;", payPalToken0.getPayerId());
      assertEquals("alfio.model.transaction.token.PayPalToken", payPalToken0.getToken());
  }

  @Test
  public void testGetPaymentIdReturningNonEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("U!D:)7;", "alfio.model.transaction.token.PayPalToken", (String) null);
      String string0 = payPalToken0.getPaymentId();
      assertEquals("U!D:)7;", payPalToken0.getPayerId());
      assertNotNull(string0);
      assertEquals("alfio.model.transaction.token.PayPalToken", string0);
  }

  @Test
  public void testGetPayerIdReturningNonEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("U!D:)7;", "alfio.model.transaction.token.PayPalToken", (String) null);
      String string0 = payPalToken0.getPayerId();
      assertNotNull(string0);
      assertEquals("U!D:)7;", string0);
      assertEquals("alfio.model.transaction.token.PayPalToken", payPalToken0.getPaymentId());
  }

  @Test
  public void testGetPaymentProvider()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("U!D:)7;", "alfio.model.transaction.token.PayPalToken", (String) null);
      payPalToken0.getPaymentProvider();
      assertEquals("alfio.model.transaction.token.PayPalToken", payPalToken0.getPaymentId());
      assertEquals("U!D:)7;", payPalToken0.getPayerId());
  }

  @Test
  public void testGetHmacReturningEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("", "", "");
      String string0 = payPalToken0.getHmac();
      assertEquals("", string0);
  }

  @Test
  public void testGetTokenReturningEmptyString()  throws Throwable  {
      PayPalToken payPalToken0 = new PayPalToken("", "", "");
      String string0 = payPalToken0.getToken();
      assertEquals("", string0);
  }
}
