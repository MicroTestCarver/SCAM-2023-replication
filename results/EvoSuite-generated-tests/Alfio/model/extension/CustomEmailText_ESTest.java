/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 08:46:29 GMT 2023
 */

package alfio.model.extension;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import alfio.model.extension.CustomEmailText;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class CustomEmailText_ESTest extends CustomEmailText_ESTest_scaffolding {

  @Test
  public void testGetHeaderReturningNonEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setHeader("E*%0pTC{");
      String string0 = customEmailText0.getHeader();
      assertEquals("E*%0pTC{", string0);
  }

  @Test
  public void testGetHeaderReturningEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setHeader("");
      String string0 = customEmailText0.getHeader();
      assertEquals("", string0);
  }

  @Test
  public void testGetFooterReturningNonEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setFooter("custom-body-text");
      String string0 = customEmailText0.getFooter();
      assertEquals("custom-body-text", string0);
  }

  @Test
  public void testGetFooterReturningEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setFooter("");
      String string0 = customEmailText0.getFooter();
      assertEquals("", string0);
  }

  @Test
  public void testGetBodyReturningNonEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setBody("^+s0<");
      String string0 = customEmailText0.getBody();
      assertEquals("^+s0<", string0);
  }

  @Test
  public void testGetBodyReturningEmptyString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setBody("");
      String string0 = customEmailText0.getBody();
      assertEquals("", string0);
  }

  @Test
  public void testCanEqualReturningTrue()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      boolean boolean0 = customEmailText0.canEqual(customEmailText0);
      assertTrue(boolean0);
  }

  @Test
  public void testCanEqualReturningFalse()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      Object object0 = new Object();
      boolean boolean0 = customEmailText0.canEqual(object0);
      assertFalse(boolean0);
  }

  @Test
  public void testGetHeaderReturningNull()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      String string0 = customEmailText0.getHeader();
      assertNull(string0);
  }

  @Test
  public void testGetFooterReturningNull()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      String string0 = customEmailText0.getFooter();
      assertNull(string0);
  }

  @Test
  public void testGetBodyReturningNull()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      String string0 = customEmailText0.getBody();
      assertNull(string0);
  }

  @Test
  public void testToMapReturningMapWhereIsEmptyIsTrueAndMapWhereSizeIsZero()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setFooter("");
      Map<String, Object> map0 = customEmailText0.toMap();
      assertTrue(map0.isEmpty());
  }

  @Test
  public void testToMapReturningMapWhereIsEmptyIsFalseAndMapWhereSizeIsPositive()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setHeader("{");
      Map<String, Object> map0 = customEmailText0.toMap();
      assertFalse(map0.isEmpty());
  }

  @Test
  public void testEqualsAndSetBodyAndSetFooter()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setFooter("");
      customEmailText0.setBody("");
      CustomEmailText customEmailText1 = new CustomEmailText();
      customEmailText1.setBody("");
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setFooter("");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndSetFooter0()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setFooter("");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndSetFooter1()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText0.setFooter("");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndSetBodyAndEqualsReturningTrue()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setBody("");
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setBody("");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndSetBody0()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setBody("C{6i");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndSetHeaderAndEqualsReturningTrue()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setHeader("");
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setHeader("");
      boolean boolean0 = customEmailText1.equals(customEmailText0);
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndSetHeader0()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setHeader("");
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndSetHeader1()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      CustomEmailText customEmailText1 = new CustomEmailText();
      assertTrue(customEmailText1.equals((Object)customEmailText0));
      
      customEmailText1.setHeader("");
      boolean boolean0 = customEmailText1.equals(customEmailText0);
      assertFalse(customEmailText1.equals((Object)customEmailText0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsWithNonNull()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      Object object0 = new Object();
      boolean boolean0 = customEmailText0.equals(object0);
      assertFalse(boolean0);
  }

  @Test
  public void testHashCodeAndSetBody()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setBody("/'zF");
      customEmailText0.hashCode();
  }

  @Test
  public void testHashCode()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.hashCode();
  }

  @Test
  public void testHashCodeAndSetHeader()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setHeader("");
      customEmailText0.hashCode();
  }

  @Test
  public void testToString()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      String string0 = customEmailText0.toString();
      assertEquals("CustomEmailText(header=null, body=null, footer=null)", string0);
  }

  @Test
  public void testHashCodeAndSetFooter()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setFooter("");
      customEmailText0.hashCode();
  }

  @Test
  public void testEqualsAndSetBody1()  throws Throwable  {
      CustomEmailText customEmailText0 = new CustomEmailText();
      customEmailText0.setBody("|Bld{`AG");
      CustomEmailText customEmailText1 = new CustomEmailText();
      boolean boolean0 = customEmailText0.equals(customEmailText1);
      assertFalse(boolean0);
  }
}
