/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 08:35:11 GMT 2023
 */

package alfio.test.util.oauth2;

import alfio.util.oauth2.AccessTokenResponseDetails;
import alfio.util.oauth2.AccessTokenResponseDetails_ESTest_scaffolding;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AccessTokenResponseDetails_ESTest extends AccessTokenResponseDetails_ESTest_scaffolding {

  @Test
  public void testEqualsAndEqualsReturningFalse0()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails((String) null, "", "6Jvpy$8Rr+U5\"^I/]H?", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails((String) null, "", "", false);
      boolean boolean0 = accessTokenResponseDetails0.equals(accessTokenResponseDetails1);
      assertFalse(boolean0);
      assertFalse(accessTokenResponseDetails1.equals((Object)accessTokenResponseDetails0));
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=, errorMessage=6Jvpy$8Rr+U5\"^I/]H?, success=false)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse1()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "FAMT9X", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("", "", (String) null, false);
      boolean boolean0 = accessTokenResponseDetails1.equals(accessTokenResponseDetails0);
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=null, success=false)", accessTokenResponseDetails1.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse2()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", (String) null, "", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("", "/", "", false);
      boolean boolean0 = accessTokenResponseDetails0.equals(accessTokenResponseDetails1);
      assertFalse(boolean0);
      assertFalse(accessTokenResponseDetails1.equals((Object)accessTokenResponseDetails0));
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=/, errorMessage=, success=false)", accessTokenResponseDetails1.toString());
  }

  @Test
  public void testIsSuccessReturningTrue()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "!`'J-Lugn+o0.5", "!`'J-Lugn+o0.5", true);
      boolean boolean0 = accessTokenResponseDetails0.isSuccess();
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=!`'J-Lugn+o0.5, errorMessage=!`'J-Lugn+o0.5, success=true)", accessTokenResponseDetails0.toString());
      assertTrue(boolean0);
  }

  @Test
  public void testGetRefreshTokenReturningNull()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("LGeaR`Hn$%x+3 &z", (String) null, "LGeaR`Hn$%x+3 &z", true);
      accessTokenResponseDetails0.getRefreshToken();
      assertEquals("AccessTokenResponseDetails(accessToken=LGeaR`Hn$%x+3 &z, refreshToken=null, errorMessage=LGeaR`Hn$%x+3 &z, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testGetRefreshTokenReturningNonEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "!`'J-Lugn+o0.5", "!`'J-Lugn+o0.5", true);
      accessTokenResponseDetails0.getRefreshToken();
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=!`'J-Lugn+o0.5, errorMessage=!`'J-Lugn+o0.5, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testGetErrorMessageReturningNull()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails((String) null, (String) null, (String) null, false);
      accessTokenResponseDetails0.getErrorMessage();
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=null, errorMessage=null, success=false)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testGetErrorMessageReturningNonEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "!`'J-Lugn+o0.5", "!`'J-Lugn+o0.5", true);
      accessTokenResponseDetails0.getErrorMessage();
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=!`'J-Lugn+o0.5, errorMessage=!`'J-Lugn+o0.5, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testGetAccessTokenReturningNull()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails((String) null, "", "", true);
      accessTokenResponseDetails0.getAccessToken();
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=, errorMessage=, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testGetAccessTokenReturningNonEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("P*wG&_P4 K<Zu-'R\"", "", ": BUPcm", false);
      accessTokenResponseDetails0.getAccessToken();
      assertEquals("AccessTokenResponseDetails(accessToken=P*wG&_P4 K<Zu-'R\", refreshToken=, errorMessage=: BUPcm, success=false)", accessTokenResponseDetails0.toString());
  }

//  @Test
//  public void testCanEqualReturningTrue()  throws Throwable  {
//      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
//      accessTokenResponseDetails0.canEqual(accessTokenResponseDetails0);
//      assertFalse(accessTokenResponseDetails0.isSuccess());
//  }
//
//  @Test
//  public void testCanEqualReturningFalse()  throws Throwable  {
//      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
//      accessTokenResponseDetails0.canEqual("");
//      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=false)", accessTokenResponseDetails0.toString());
//  }

  @Test
  public void testGetErrorMessageReturningEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      accessTokenResponseDetails0.getErrorMessage();
      assertFalse(accessTokenResponseDetails0.isSuccess());
  }

  @Test
  public void testGetRefreshTokenReturningEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      accessTokenResponseDetails0.getRefreshToken();
      assertFalse(accessTokenResponseDetails0.isSuccess());
  }

  @Test
  public void testGetAccessTokenReturningEmptyString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      accessTokenResponseDetails0.getAccessToken();
      assertFalse(accessTokenResponseDetails0.isSuccess());
  }

  @Test
  public void testIsSuccessReturningFalse()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      boolean boolean0 = accessTokenResponseDetails0.isSuccess();
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningTrue0()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("", "", "", false);
      boolean boolean0 = accessTokenResponseDetails0.equals(accessTokenResponseDetails1);
      assertTrue(boolean0);
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=false)", accessTokenResponseDetails1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse3()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", true);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("", "hw{S^+Ub]E]cX", "AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=true)", true);
      boolean boolean0 = accessTokenResponseDetails0.equals(accessTokenResponseDetails1);
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=hw{S^+Ub]E]cX, errorMessage=AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=true), success=true)", accessTokenResponseDetails1.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse4()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("alfio.util.oauth2.AccessTokenResponseDetails", "alfio.util.oauth2.AccessTokenResponseDetails", "alfio.util.oauth2.AccessTokenResponseDetails", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("AccessTokenResponseDetails(accessToken=alfio.util.oauth2.AccessTokenResponseDetails, refreshToken=alfio.util.oauth2.AccessTokenResponseDetails, errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false)", "AccessTokenResponseDetails(accessToken=alfio.util.oauth2.AccessTokenResponseDetails, refreshToken=alfio.util.oauth2.AccessTokenResponseDetails, errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false)", "alfio.util.oauth2.AccessTokenResponseDetails", false);
      boolean boolean0 = accessTokenResponseDetails0.equals(accessTokenResponseDetails1);
      assertFalse(boolean0);
      assertEquals("AccessTokenResponseDetails(accessToken=AccessTokenResponseDetails(accessToken=alfio.util.oauth2.AccessTokenResponseDetails, refreshToken=alfio.util.oauth2.AccessTokenResponseDetails, errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false), refreshToken=AccessTokenResponseDetails(accessToken=alfio.util.oauth2.AccessTokenResponseDetails, refreshToken=alfio.util.oauth2.AccessTokenResponseDetails, errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false), errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false)", accessTokenResponseDetails1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningTrue1()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails((String) null, (String) null, (String) null, false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails((String) null, (String) null, (String) null, false);
      boolean boolean0 = accessTokenResponseDetails1.equals(accessTokenResponseDetails0);
      assertTrue(boolean0);
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=null, errorMessage=null, success=false)", accessTokenResponseDetails1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse5()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("CIh-#SN3;k!#$Ns!", (String) null, "b", true);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails((String) null, "<oC", "&Wz;", true);
      boolean boolean0 = accessTokenResponseDetails1.equals(accessTokenResponseDetails0);
      assertFalse(boolean0);
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=<oC, errorMessage=&Wz;, success=true)", accessTokenResponseDetails1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse6()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("IK", "IK", "IK", false);
      AccessTokenResponseDetails accessTokenResponseDetails1 = new AccessTokenResponseDetails("IK", "IK", "IK", true);
      boolean boolean0 = accessTokenResponseDetails1.equals(accessTokenResponseDetails0);
      assertFalse(boolean0);
      assertTrue(accessTokenResponseDetails1.isSuccess());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse7()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      boolean boolean0 = accessTokenResponseDetails0.equals("AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=false)");
      assertFalse(boolean0);
      assertFalse(accessTokenResponseDetails0.isSuccess());
  }

  @Test
  public void testHashCode0()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", (String) null, (String) null, true);
      accessTokenResponseDetails0.hashCode();
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=null, errorMessage=null, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testHashCode1()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails((String) null, "<oC", "&Wz;", true);
      accessTokenResponseDetails0.hashCode();
      assertEquals("AccessTokenResponseDetails(accessToken=null, refreshToken=<oC, errorMessage=&Wz;, success=true)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testHashCode2()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("", "", "", false);
      accessTokenResponseDetails0.hashCode();
      assertEquals("AccessTokenResponseDetails(accessToken=, refreshToken=, errorMessage=, success=false)", accessTokenResponseDetails0.toString());
  }

  @Test
  public void testToString()  throws Throwable  {
      AccessTokenResponseDetails accessTokenResponseDetails0 = new AccessTokenResponseDetails("alfio.util.oauth2.AccessTokenResponseDetails", "alfio.util.oauth2.AccessTokenResponseDetails", "alfio.util.oauth2.AccessTokenResponseDetails", false);
      String string0 = accessTokenResponseDetails0.toString();
      assertEquals("AccessTokenResponseDetails(accessToken=alfio.util.oauth2.AccessTokenResponseDetails, refreshToken=alfio.util.oauth2.AccessTokenResponseDetails, errorMessage=alfio.util.oauth2.AccessTokenResponseDetails, success=false)", string0);
  }
}
