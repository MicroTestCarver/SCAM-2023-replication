/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 07:34:46 GMT 2023
 */

package alfio.test.util.oauth2;

import alfio.util.oauth2.AuthorizationRequestDetails;
import alfio.util.oauth2.AuthorizationRequestDetails_ESTest_scaffolding;
import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class AuthorizationRequestDetails_ESTest extends AuthorizationRequestDetails_ESTest_scaffolding {

  @Test
  public void testEqualsAndEqualsReturningFalse0()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("\f=:Iu^DV`#1C_EVT", "\f=:Iu^DV`#1C_EVT");
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("\f=:Iu^DV`#1C_EVT", "");
      boolean boolean0 = authorizationRequestDetails0.equals(authorizationRequestDetails1);
      assertFalse(boolean0);
      assertFalse(authorizationRequestDetails1.equals((Object)authorizationRequestDetails0));
      assertEquals("\f=:Iu^DV`#1C_EVT", authorizationRequestDetails1.getAuthorizationUrl());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse1()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("", (String) null);
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("", "");
      boolean boolean0 = authorizationRequestDetails0.equals(authorizationRequestDetails1);
      assertFalse(authorizationRequestDetails1.equals((Object)authorizationRequestDetails0));
      assertEquals("AuthorizationRequestDetails(authorizationUrl=, state=null)", authorizationRequestDetails0.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testGetStateReturningNonEmptyString()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("\f=:Iu^DV`#1C_EVT", "\f=:Iu^DV`#1C_EVT");
      String string0 = authorizationRequestDetails0.getState();
      assertEquals("\f=:Iu^DV`#1C_EVT", string0);
  }

  @Test
  public void testGetStateReturningEmptyString()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("\f=:Iu^DV`#1C_EVT", "");
      authorizationRequestDetails0.getState();
      assertEquals("AuthorizationRequestDetails(authorizationUrl=\f=:Iu^DV`#1C_EVT, state=)", authorizationRequestDetails0.toString());
  }

  @Test
  public void testGetAuthorizationUrlReturningNonEmptyString()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("\f=:Iu^DV`#1C_EVT", "\f=:Iu^DV`#1C_EVT");
      String string0 = authorizationRequestDetails0.getAuthorizationUrl();
      assertEquals("\f=:Iu^DV`#1C_EVT", string0);
  }

  @Test
  public void testGetAuthorizationUrlReturningEmptyString()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("", (String) null);
      authorizationRequestDetails0.getAuthorizationUrl();
      assertEquals("AuthorizationRequestDetails(authorizationUrl=, state=null)", authorizationRequestDetails0.toString());
  }

//  @Test
//  public void testCanEqualReturningTrue()  throws Throwable  {
//      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
//      boolean boolean0 = authorizationRequestDetails0.canEqual(authorizationRequestDetails0);
//      assertTrue(boolean0);
//  }
//
//  @Test
//  public void testCanEqualReturningFalse()  throws Throwable  {
//      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
//      Object object0 = new Object();
//      boolean boolean0 = authorizationRequestDetails0.canEqual(object0);
//      assertFalse(boolean0);
//  }

  @Test
  public void testGetAuthorizationUrlReturningNull()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      String string0 = authorizationRequestDetails0.getAuthorizationUrl();
      assertNull(string0);
  }

  @Test
  public void testGetStateReturningNull()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      String string0 = authorizationRequestDetails0.getState();
      assertNull(string0);
  }

  @Test
  public void testEqualsAndEqualsReturningTrue0()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("zc.]", "zc.]");
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("zc.]", "zc.]");
      boolean boolean0 = authorizationRequestDetails0.equals(authorizationRequestDetails1);
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse2()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("zc.]", "zc.]");
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("zc.]", "");
      boolean boolean0 = authorizationRequestDetails1.equals(authorizationRequestDetails0);
      assertEquals("zc.]", authorizationRequestDetails1.getAuthorizationUrl());
      assertFalse(authorizationRequestDetails0.equals((Object)authorizationRequestDetails1));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse3()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("", (String) null);
      boolean boolean0 = authorizationRequestDetails1.equals(authorizationRequestDetails0);
      assertEquals("AuthorizationRequestDetails(authorizationUrl=, state=null)", authorizationRequestDetails1.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse4()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails("", (String) null);
      boolean boolean0 = authorizationRequestDetails0.equals(authorizationRequestDetails1);
      assertFalse(authorizationRequestDetails1.equals((Object)authorizationRequestDetails0));
      assertEquals("AuthorizationRequestDetails(authorizationUrl=, state=null)", authorizationRequestDetails1.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningTrue1()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      AuthorizationRequestDetails authorizationRequestDetails1 = new AuthorizationRequestDetails((String) null, (String) null);
      boolean boolean0 = authorizationRequestDetails1.equals(authorizationRequestDetails0);
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse5()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      boolean boolean0 = authorizationRequestDetails0.equals("AuthorizationRequestDetails(authorizationUrl=null, state=null)");
      assertFalse(boolean0);
  }

  @Test
  public void testHashCode0()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails("", "");
      authorizationRequestDetails0.hashCode();
  }

  @Test
  public void testHashCode1()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      authorizationRequestDetails0.hashCode();
  }

  @Test
  public void testToString()  throws Throwable  {
      AuthorizationRequestDetails authorizationRequestDetails0 = new AuthorizationRequestDetails((String) null, (String) null);
      String string0 = authorizationRequestDetails0.toString();
      assertEquals("AuthorizationRequestDetails(authorizationUrl=null, state=null)", string0);
  }
}
