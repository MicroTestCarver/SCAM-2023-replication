/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 01:07:36 GMT 2023
 */

package alfio.manager.support;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class SponsorAttendeeData_ESTest extends SponsorAttendeeData_ESTest_scaffolding {

  @Test
  public void testHashCode0()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "HFa)QVTC;F9", "", "HFa)QVTC;F9");
      sponsorAttendeeData0.hashCode();
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=HFa)QVTC;F9, fullName=, email=HFa)QVTC;F9)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningTrue0()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "", "wsbV", (String) null);
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("", "", "wsbV", (String) null);
      boolean boolean0 = sponsorAttendeeData1.equals(sponsorAttendeeData0);
      assertTrue(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=, fullName=wsbV, email=null)", sponsorAttendeeData1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse0()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("wsbV", "", (String) null, "");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("wsbV", "", "Q'>+", (String) null);
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertEquals("SponsorAttendeeData(ticketId=wsbV, timestamp=, fullName=Q'>+, email=null)", sponsorAttendeeData1.toString());
      assertFalse(boolean0);
  }

  @Test
  public void testGetTimestampReturningNull()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("PQ{a$ef/gJ", (String) null, "XIQ2X\"N \"[J{=J%", "SponsorAttendeeData(ticketId=PQ{a$ef/gJ, timestamp=PQ{a$ef/gJ, fullName=:oP0$~#3Z`;/H]v~={, email=-,nro)");
      sponsorAttendeeData0.getTimestamp();
      assertEquals("SponsorAttendeeData(ticketId=PQ{a$ef/gJ, timestamp=null, fullName=XIQ2X\"N \"[J{=J%, email=SponsorAttendeeData(ticketId=PQ{a$ef/gJ, timestamp=PQ{a$ef/gJ, fullName=:oP0$~#3Z`;/H]v~={, email=-,nro))", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetTimestampReturningNonEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "alfio.manager.support.SponsorAttendeeData", "", "alfio.manager.support.SponsorAttendeeData");
      sponsorAttendeeData0.getTimestamp();
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=alfio.manager.support.SponsorAttendeeData, fullName=, email=alfio.manager.support.SponsorAttendeeData)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetTicketIdReturningNonEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("HFa)QVTC;F9", "", "HFa)QVTC;F9", "HFa)QVTC;F9");
      sponsorAttendeeData0.getTicketId();
      assertEquals("SponsorAttendeeData(ticketId=HFa)QVTC;F9, timestamp=, fullName=HFa)QVTC;F9, email=HFa)QVTC;F9)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetTicketIdReturningEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "alfio.manager.support.SponsorAttendeeData", "", "alfio.manager.support.SponsorAttendeeData");
      sponsorAttendeeData0.getTicketId();
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=alfio.manager.support.SponsorAttendeeData, fullName=, email=alfio.manager.support.SponsorAttendeeData)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetFullNameReturningNonEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("HFa)QVTC;F9", "", "HFa)QVTC;F9", "HFa)QVTC;F9");
      sponsorAttendeeData0.getFullName();
      assertEquals("SponsorAttendeeData(ticketId=HFa)QVTC;F9, timestamp=, fullName=HFa)QVTC;F9, email=HFa)QVTC;F9)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetFullNameReturningEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "alfio.manager.support.SponsorAttendeeData", "", "alfio.manager.support.SponsorAttendeeData");
      sponsorAttendeeData0.getFullName();
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=alfio.manager.support.SponsorAttendeeData, fullName=, email=alfio.manager.support.SponsorAttendeeData)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetEmailReturningNonEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "alfio.manager.support.SponsorAttendeeData", "", "alfio.manager.support.SponsorAttendeeData");
      sponsorAttendeeData0.getEmail();
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=alfio.manager.support.SponsorAttendeeData, fullName=, email=alfio.manager.support.SponsorAttendeeData)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetEmailReturningEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "", "", "");
      String string0 = sponsorAttendeeData0.getEmail();
      assertEquals("", string0);
  }

  @Test
  public void testCanEqualReturningTrue()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("PQ{a$ef/gJ", "PQ{a$ef/gJ", ":oP0$~#3Z`;/H]v~={", "-,nro");
      sponsorAttendeeData0.canEqual(sponsorAttendeeData0);
      assertEquals("SponsorAttendeeData(ticketId=PQ{a$ef/gJ, timestamp=PQ{a$ef/gJ, fullName=:oP0$~#3Z`;/H]v~={, email=-,nro)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testCanEqualReturningFalse()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "", (String) null, (String) null);
      sponsorAttendeeData0.canEqual((Object) null);
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=, fullName=null, email=null)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetEmailReturningNull()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "", (String) null, (String) null);
      sponsorAttendeeData0.getEmail();
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=, fullName=null, email=null)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetTicketIdReturningNull()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "", (String) null, (String) null);
      sponsorAttendeeData0.getTicketId();
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=, fullName=null, email=null)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetTimestampReturningEmptyString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "", (String) null, (String) null);
      sponsorAttendeeData0.getTimestamp();
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=, fullName=null, email=null)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testGetFullNameReturningNull()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("wsbV", "", (String) null, "");
      sponsorAttendeeData0.getFullName();
      assertEquals("SponsorAttendeeData(ticketId=wsbV, timestamp=, fullName=null, email=)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse1()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("u", "u", "u", "u");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("u", "u", "u", "psjR@gJKX1Zm3jQR%");
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertEquals("SponsorAttendeeData(ticketId=u, timestamp=u, fullName=u, email=psjR@gJKX1Zm3jQR%)", sponsorAttendeeData1.toString());
      assertFalse(sponsorAttendeeData1.equals((Object)sponsorAttendeeData0));
      assertFalse(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningTrue1()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "", "wsbV", "psjR@gJKX1Z73jQRk");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("", "", "wsbV", "psjR@gJKX1Z73jQRk");
      boolean boolean0 = sponsorAttendeeData1.equals(sponsorAttendeeData0);
      assertTrue(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=, fullName=wsbV, email=psjR@gJKX1Z73jQRk)", sponsorAttendeeData1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse2()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("((e?@", "((e?@", "((e?@", "((e?@");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("((e?@", "((e?@", "& 9j~h,j,", "((e?@");
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertEquals("SponsorAttendeeData(ticketId=((e?@, timestamp=((e?@, fullName=& 9j~h,j,, email=((e?@)", sponsorAttendeeData1.toString());
      assertFalse(boolean0);
      assertFalse(sponsorAttendeeData1.equals((Object)sponsorAttendeeData0));
  }

  @Test
  public void testEqualsAndEqualsReturningFalse3()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("%mvzopn{SdA G", "%mvzopn{SdA G", "btnKZzW^PrICf/S&Ni", "%mvzopn{SdA G");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("%mvzopn{SdA G", "btnKZzW^PrICf/S&Ni", "btnKZzW^PrICf/S&Ni", "%mvzopn{SdA G");
      boolean boolean0 = sponsorAttendeeData1.equals(sponsorAttendeeData0);
      assertFalse(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=%mvzopn{SdA G, timestamp=btnKZzW^PrICf/S&Ni, fullName=btnKZzW^PrICf/S&Ni, email=%mvzopn{SdA G)", sponsorAttendeeData1.toString());
      assertFalse(sponsorAttendeeData0.equals((Object)sponsorAttendeeData1));
      assertEquals("SponsorAttendeeData(ticketId=%mvzopn{SdA G, timestamp=%mvzopn{SdA G, fullName=btnKZzW^PrICf/S&Ni, email=%mvzopn{SdA G)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse4()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("", "", "wsbV", (String) null);
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("", (String) null, "", "");
      boolean boolean0 = sponsorAttendeeData1.equals(sponsorAttendeeData0);
      assertFalse(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=, fullName=wsbV, email=null)", sponsorAttendeeData0.toString());
      assertEquals("SponsorAttendeeData(ticketId=, timestamp=null, fullName=, email=)", sponsorAttendeeData1.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse5()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "D", "D", "D");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("D", "D", "D", "D");
      boolean boolean0 = sponsorAttendeeData1.equals(sponsorAttendeeData0);
      assertFalse(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=D, fullName=D, email=D)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningFalse6()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "$", "$", "$");
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("$", "$", "$", "$");
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertFalse(boolean0);
      assertFalse(sponsorAttendeeData1.equals((Object)sponsorAttendeeData0));
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=$, fullName=$, email=$)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testEqualsAndEqualsReturningTrue2()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, (String) null, (String) null, (String) null);
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData((String) null, (String) null, (String) null, (String) null);
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertTrue(boolean0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse7()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("wsbV", "", (String) null, "");
      boolean boolean0 = sponsorAttendeeData0.equals("");
      assertFalse(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=wsbV, timestamp=, fullName=null, email=)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testHashCode1()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, (String) null, (String) null, "@#?-x!i! M@5#x");
      sponsorAttendeeData0.hashCode();
  }

  @Test
  public void testHashCode2()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData((String) null, "", (String) null, (String) null);
      sponsorAttendeeData0.hashCode();
      assertEquals("SponsorAttendeeData(ticketId=null, timestamp=, fullName=null, email=null)", sponsorAttendeeData0.toString());
  }

  @Test
  public void testToString()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("wsbV", "", (String) null, "");
      String string0 = sponsorAttendeeData0.toString();
      assertEquals("SponsorAttendeeData(ticketId=wsbV, timestamp=, fullName=null, email=)", string0);
  }

  @Test
  public void testEqualsAndEqualsReturningFalse8()  throws Throwable  {
      SponsorAttendeeData sponsorAttendeeData0 = new SponsorAttendeeData("%mvzopn{SdA G", "%mvzopn{SdA G", "%mvzopn{SdA G", (String) null);
      SponsorAttendeeData sponsorAttendeeData1 = new SponsorAttendeeData("%mvzopn{SdA G", "%mvzopn{SdA G", "%mvzopn{SdA G", "%mvzopn{SdA G");
      boolean boolean0 = sponsorAttendeeData0.equals(sponsorAttendeeData1);
      assertFalse(boolean0);
      assertEquals("SponsorAttendeeData(ticketId=%mvzopn{SdA G, timestamp=%mvzopn{SdA G, fullName=%mvzopn{SdA G, email=null)", sponsorAttendeeData0.toString());
      assertFalse(sponsorAttendeeData1.equals((Object)sponsorAttendeeData0));
  }
}
