/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 08:50:05 GMT 2023
 */

package alfio.util;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import alfio.util.ItalianTaxIdValidator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ItalianTaxIdValidator_ESTest extends ItalianTaxIdValidator_ESTest_scaffolding {

  @Test
  public void testValidateFiscalCode0()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateFiscalCode("NZY1V$G&8]<");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateVatIdWithEmptyString()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateVatId("");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName0()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("bMIo/R&`{+W ", "%^boilfYbSt3'GKi0\"B", "bMIo/R&`{+W ");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName1()  throws Throwable  {
      String string0 = "N U12\\uCe";
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("Lq/\"^J]=t]Jf", string0, "3n90OOQXnZ4A1eTL");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName2()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("roPyUG5[", "ZVMBQM3N90OOQXNZ4A1ETL", "3n90OOQXnZ4A1eTL");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateVatId0()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateVatId("jFm49,MOe%2");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateVatIdReturningTrue()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateVatId("db8RANep(,2");
      assertTrue(boolean0);
  }

  @Test
  public void testValidateFiscalCodeReturningTrue()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateFiscalCode("3n90OOQXnZ4A1eTL");
      assertTrue(boolean0);
  }

  @Test
  public void testValidateFiscalCode1()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateFiscalCode("dRNf");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateFiscalCode2()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateFiscalCode("30Z4QXHnZvArzetL");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateFiscalCodeWithEmptyString()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateFiscalCode("");
      assertFalse(boolean0);
  }

  @Test
  public void testValidateVatIdThrowsArrayIndexOutOfBoundsException()  throws Throwable  {
      // Undeclared exception!
      try { 
        ItalianTaxIdValidator.validateVatId("7");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // Index 1 out of bounds for length 1
         //
         verifyException("alfio.util.ItalianTaxIdValidator", e);
      }
  }

  @Test
  public void testValidateVatId1()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.validateVatId("alfio.util.ItalianTaxIdValidator$FiscalCodeParts");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName3()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("3n90OOQXnZ4A1eTL", "\r", "3n90OOQXnZ4A1eTL");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName4()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("30Z4QXHnZvgrzetL", "30Z4QXHnZvgrzetL", "30Z4QXHnZvgrzetL");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithNameWithNull()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("db8RANep(,2", (String) null, "^tEFhx!(hz'9UdT=R");
      assertFalse(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithNameReturningTrue()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName("db8RANep(,2", (String) null, "db8RANep(,2");
      assertTrue(boolean0);
  }

  @Test
  public void testFiscalCodeMatchesWithName5()  throws Throwable  {
      boolean boolean0 = ItalianTaxIdValidator.fiscalCodeMatchesWithName(" vs ", "XXXNXN3N90OOQXNZ4A1/TL", "3n90OOQXnZ4A1eTL");
      assertFalse(boolean0);
  }
}
