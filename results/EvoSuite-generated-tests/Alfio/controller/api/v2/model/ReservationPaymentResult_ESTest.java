/*
 * This file was automatically generated by EvoSuite
 * Tue Jan 10 08:54:44 GMT 2023
 */

package alfio.controller.api.v2.model;

import org.junit.jupiter.api.Test;
import static org.junit.Assert.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class ReservationPaymentResult_ESTest extends ReservationPaymentResult_ESTest_scaffolding {

  @Test
  public void testCreatesReservationPaymentResult()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(true, true, "", false, "'K;s-w~Ou@)@!!DG?n");
      assertEquals("'K;s-w~Ou@)@!!DG?n", reservationPaymentResult0.getGatewayIdOrNull());
      assertFalse(reservationPaymentResult0.isFailure());
      assertTrue(reservationPaymentResult0.isRedirect());
      assertEquals("", reservationPaymentResult0.getRedirectUrl());
      assertTrue(reservationPaymentResult0.isSuccess());
  }

  @Test
  public void testIsSuccessReturningTrue()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(true, true, "", true, "");
      boolean boolean0 = reservationPaymentResult0.isSuccess();
      assertTrue(boolean0);
      assertTrue(reservationPaymentResult0.isFailure());
      assertTrue(reservationPaymentResult0.isRedirect());
  }

  @Test
  public void testIsRedirectReturningTrue()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(true, true, "", true, "");
      boolean boolean0 = reservationPaymentResult0.isRedirect();
      assertTrue(reservationPaymentResult0.isFailure());
      assertTrue(boolean0);
      assertTrue(reservationPaymentResult0.isSuccess());
  }

  @Test
  public void testIsFailureReturningTrue()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(true, true, "", true, "");
      boolean boolean0 = reservationPaymentResult0.isFailure();
      assertTrue(reservationPaymentResult0.isSuccess());
      assertTrue(boolean0);
      assertTrue(reservationPaymentResult0.isRedirect());
  }

  @Test
  public void testGetRedirectUrlReturningNull()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, true, (String) null, true, (String) null);
      reservationPaymentResult0.getRedirectUrl();
      assertTrue(reservationPaymentResult0.isRedirect());
      assertFalse(reservationPaymentResult0.isSuccess());
      assertTrue(reservationPaymentResult0.isFailure());
  }

  @Test
  public void testGetRedirectUrlReturningNonEmptyString()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "<(U3LM0nZ6", false, "I8.A+LCBX=s(ur.haMe");
      String string0 = reservationPaymentResult0.getRedirectUrl();
      assertFalse(reservationPaymentResult0.isRedirect());
      assertFalse(reservationPaymentResult0.isFailure());
      assertEquals("I8.A+LCBX=s(ur.haMe", reservationPaymentResult0.getGatewayIdOrNull());
      assertEquals("<(U3LM0nZ6", string0);
      assertFalse(reservationPaymentResult0.isSuccess());
  }

  @Test
  public void testGetGatewayIdOrNullReturningNull()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, true, (String) null, true, (String) null);
      reservationPaymentResult0.getGatewayIdOrNull();
      assertTrue(reservationPaymentResult0.isFailure());
      assertFalse(reservationPaymentResult0.isSuccess());
      assertTrue(reservationPaymentResult0.isRedirect());
  }

  @Test
  public void testGetGatewayIdOrNullReturningNonEmptyString()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "<(U3LM0nZ6", false, "I8.A+LCBX=s(ur.haMe");
      String string0 = reservationPaymentResult0.getGatewayIdOrNull();
      assertEquals("I8.A+LCBX=s(ur.haMe", string0);
      assertFalse(reservationPaymentResult0.isRedirect());
      assertFalse(reservationPaymentResult0.isSuccess());
      assertFalse(reservationPaymentResult0.isFailure());
      assertEquals("<(U3LM0nZ6", reservationPaymentResult0.getRedirectUrl());
  }

  @Test
  public void testIsRedirectReturningFalse()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "", false, "");
      boolean boolean0 = reservationPaymentResult0.isRedirect();
      assertFalse(reservationPaymentResult0.isFailure());
      assertFalse(boolean0);
      assertFalse(reservationPaymentResult0.isSuccess());
  }

  @Test
  public void testGetRedirectUrlReturningEmptyString()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "", false, "");
      reservationPaymentResult0.getRedirectUrl();
      assertFalse(reservationPaymentResult0.isRedirect());
      assertFalse(reservationPaymentResult0.isSuccess());
      assertFalse(reservationPaymentResult0.isFailure());
  }

  @Test
  public void testIsFailureReturningFalse()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "", false, "");
      boolean boolean0 = reservationPaymentResult0.isFailure();
      assertFalse(reservationPaymentResult0.isRedirect());
      assertFalse(boolean0);
      assertFalse(reservationPaymentResult0.isSuccess());
  }

  @Test
  public void testIsSuccessReturningFalse()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(false, false, "", false, "");
      boolean boolean0 = reservationPaymentResult0.isSuccess();
      assertFalse(boolean0);
      assertFalse(reservationPaymentResult0.isRedirect());
      assertFalse(reservationPaymentResult0.isFailure());
  }

  @Test
  public void testGetGatewayIdOrNullReturningEmptyString()  throws Throwable  {
      ReservationPaymentResult reservationPaymentResult0 = new ReservationPaymentResult(true, true, "", true, "");
      reservationPaymentResult0.getGatewayIdOrNull();
      assertTrue(reservationPaymentResult0.isRedirect());
      assertTrue(reservationPaymentResult0.isFailure());
      assertTrue(reservationPaymentResult0.isSuccess());
  }
}
