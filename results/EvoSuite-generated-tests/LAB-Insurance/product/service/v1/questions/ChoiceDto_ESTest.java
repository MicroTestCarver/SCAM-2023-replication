/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 14:47:50 GMT 2023
 */

package pl.altkom.asc.lab.micronaut.poc.product.service.v1.questions;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import pl.altkom.asc.lab.micronaut.poc.product.service.api.v1.questions.ChoiceDto;

public class ChoiceDto_ESTest {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetLabelReturningNull()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto();
      String string0 = choiceDto0.getLabel();
      assertNull(string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetLabelReturningNonEmptyString()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto("", "JsR~yo");
      String string0 = choiceDto0.getLabel();
      assertEquals("JsR~yo", string0);
      assertEquals("", choiceDto0.getCode());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetCodeReturningNonEmptyString()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto("pl.altkom.asc.lab.micronaut.poc.product.service.api.v1.questions.ChoiceDto", "pl.altkom.asc.lab.micronaut.poc.product.service.api.v1.questions.ChoiceDto");
      String string0 = choiceDto0.getCode();
      assertEquals("pl.altkom.asc.lab.micronaut.poc.product.service.api.v1.questions.ChoiceDto", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetLabelReturningEmptyString()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto("", "");
      String string0 = choiceDto0.getLabel();
      assertEquals("", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetCodeReturningNull()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto();
      String string0 = choiceDto0.getCode();
      assertNull(string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetCodeReturningEmptyString()  throws Throwable  {
      ChoiceDto choiceDto0 = new ChoiceDto("", "");
      String string0 = choiceDto0.getCode();
      assertEquals("", string0);
  }
}
