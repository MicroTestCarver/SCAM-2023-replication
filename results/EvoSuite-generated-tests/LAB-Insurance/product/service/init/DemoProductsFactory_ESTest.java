/*
 * This file was automatically generated by EvoSuite
 * Mon May 15 14:49:54 GMT 2023
 */

package pl.altkom.asc.lab.micronaut.poc.product.service.init;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import pl.altkom.asc.lab.micronaut.poc.product.service.domain.Product;

public class DemoProductsFactory_ESTest  {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCar()  throws Throwable  {
      Product product0 = DemoProductsFactory.car();
      assertEquals("Car insurance", product0.getDescription());
      assertEquals("/static/car.jpg", product0.getImage());
      assertEquals("Happy Driver", product0.getName());
      assertEquals("CAR", product0.getCode());
      assertEquals("car", product0.getIcon());
      assertEquals(1, product0.getMaxNumberOfInsured());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testHouse()  throws Throwable  {
      Product product0 = DemoProductsFactory.house();
      assertEquals("House insurance", product0.getDescription());
      assertEquals("HSI", product0.getCode());
      assertEquals("/static/house.jpg", product0.getImage());
      assertEquals("building", product0.getIcon());
      assertEquals("Happy House", product0.getName());
      assertEquals(5, product0.getMaxNumberOfInsured());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testTravel()  throws Throwable  {
      Product product0 = DemoProductsFactory.travel();
      assertEquals("Travel insurance", product0.getDescription());
      assertEquals("/static/travel.jpg", product0.getImage());
      assertEquals("Safe Traveller", product0.getName());
      assertEquals("TRI", product0.getCode());
      assertEquals(10, product0.getMaxNumberOfInsured());
      assertEquals("plane", product0.getIcon());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesDemoProductsFactory()  throws Throwable  {
      DemoProductsFactory demoProductsFactory0 = new DemoProductsFactory();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testFarm()  throws Throwable  {
      Product product0 = DemoProductsFactory.farm();
      assertEquals("Farm insurance", product0.getDescription());
      assertEquals("Happy farm", product0.getName());
      assertEquals("/static/farm.jpg", product0.getImage());
      assertEquals("apple", product0.getIcon());
      assertEquals(1, product0.getMaxNumberOfInsured());
      assertEquals("FAI", product0.getCode());
  }
}
